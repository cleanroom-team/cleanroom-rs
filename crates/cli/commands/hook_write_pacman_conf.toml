[command]
help = """
Install packages for arch linux distributions
"""

script = """
    if [ "${CURRENT_PHASE}" = "${PHASE_PREPARE}" ]; then
        cat <<"EOF" > /etc/pacman.conf
[options]
DBPath = /usr/lib/pacman/db/
GPGDir = /usr/lib/pacman/gpg/
HoldPkg = pacman glibc
Architecture = x86_64

SigLevel = Required DatabaseOptional
LocalFileSigLevel = Optional

# REPOSITORIES
#   - can be defined here or included from another file
#   - pacman will search repositories in the order defined here
#   - local/custom mirrors can be added here or in separate files
#   - repositories listed first will take precedence when packages
#     have identical names, regardless of version number
#   - URLs will have $repo replaced by the name of the current repo
#   - URLs will have $arch replaced by the name of the architecture
#
# Repository entries are of the format:
#       [repo-name]
#       Server = ServerName
#       Include = IncludePath
#
# The header [repo-name] is crucial - it must be present and
# uncommented to enable the repo.
#


# The testing repositories are disabled by default. To enable, uncomment the
# repo name header and Include lines. You can add preferred servers immediately
# after the header, and they will be used before the default mirrors.

#[core-testing]
#Server = https://geo.mirror.pkgbuild.com/$repo/os/$arch

[core]
Server = https://geo.mirror.pkgbuild.com/$repo/os/$arch

#[extra-testing]
#Server = https://geo.mirror.pkgbuild.com/$repo/os/$arch

[extra]
Server = https://geo.mirror.pkgbuild.com/$repo/os/$arch

# If you want to run 32 bit applications on your x86_64 system,
# enable the multilib repositories as required here.

#[multilib-testing]
#Include = /etc/pacman.d/mirrorlist

#[multilib]
#Include = /etc/pacman.d/mirrorlist

# An example of a custom package repository.  See the pacman manpage for
# tips on creating your own repositories.
#[custom]
#SigLevel = Optional TrustAll
#Server = file:///home/custompkgs
EOF
    fi
"""
